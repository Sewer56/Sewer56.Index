{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Sewer's Project Index A software dev by day and game modder/hacker by night. <p>Find all of my projects here.</p>"},{"location":"#about","title":"About","text":"<p>This page contains an easy to search index of a vast majority of my public, open source projects.  </p> <ul> <li>My Open Source Software, Tools &amp; Libraries.  </li> <li>My Game Fixes and Reverse Engineering Work.  </li> </ul> <p>Search can be quickly accessed by pressing <code>/</code> key on keyboard.  </p>"},{"location":"#about-me","title":"About Me","text":"<p>Hi, I'm Sewer, an open source library author by day and singleplayer game modder/reverse engineer by night.</p> <p>As long as, can remember, I've been tinkering with both software and hardware; originally being just an  end user, with time, becoming a software developer myself. </p> <p>My first piece of what I could consider 'development work' growing up, would have been in 2012 with the Xperia Play,  my first Android Device I received as a 13 year old. At the time, Android devices were very hardware constrained, with  a single ~1GHz core and 512MB RAM (or less!), so as a tinkerer, many hardware enthusiasts ran Custom ROMs for better performance. </p> <p>As a power user, I became one of those ROM developers, creating stock-based ROMs such as Gin2JellyBean Extended,  for the Play and OxySlim  for the OnePlus 2, also being a minor contributor of halogenOS, mostly providing the artwork  used there.</p> <p></p> <p>My inspiration for starting programming for the first time came in 2015. I had a bit of nostalgia for a game I played  as a child, Sonic Heroes; so I decided to try tinkering with it. My first experiences involved reverse engineering the Object Placement format  using HxD; during the same time I got the opportunity to start picking up C# at school.  </p> <p>In 2017, I met Igor Seabra, who also had passion for the game and thus, between the  two of us, we spent the year cracking the game wide open; bringing even custom levels to the table and ultimately releasing  Heroes Tweakbox, as a celebration of that year's achievements.  </p> <p>From there onwards, reverse engineering and modding games has became a hobby of mine, jumping in between different  games to help various communities out; while also doing general open source library work and contributions. My work  spans quite a few games, but I'm probably best known for Reloaded-II, the next generation .NET based mod loader. </p> <p>As for what I do these days? I work at Nexus Mods while in my spare time, I still  release new modifications, patches and libraries somewhat regularly. I also occasionally contribute to others'  Open Source Projects (My GitHub Activity). </p> <p>Example projects I've contributed to include DotNetCorePlugins, LiteNetLib, SharpGenTools, il-repack, vcdiff and even the .NET Runtime itself.</p>"},{"location":"index-games/","title":"Games Index","text":"<p>This page lists the various original game related libraries, modifications, reverse engineering works and tools I've created, i.e. projects where I am the main author [unless specified].  </p> <p>Info</p> <p>This page acts as a general hub that links towards individual projects I've made for each game. A summarised shortlist of my work is listed in <code>About</code> box for each game.  </p> <p>All trademarks, logos and brand names are the property of their respective owners.  </p>"},{"location":"index-games/#commongeneral","title":"Common/General","text":"<p>About</p> <ul> <li>Contains anything generic that is game related, but is generic and applies multiple games.  </li> </ul> <p>Dedicated Page.  </p>"},{"location":"index-games/#bloons-td-6","title":"Bloons TD 6","text":"<p>About</p> <ul> <li>PC Game, 2018.  </li> <li>Run multiple instances of the game at the same time.  </li> <li>Mod that implements a custom game mode 'Salaried Monkeys'.  </li> <li>Contributions to community modding libraries.  </li> </ul> <p>Dedicated Game Page.  </p>"},{"location":"index-games/#flatout-2","title":"FlatOut 2","text":"<p>About</p> <ul> <li>PC Game, 2006.  </li> <li>Change multiplayer without new savefile.  </li> <li>Discord Rich Presence support.  </li> <li>Loading mods without editing game folder.  </li> <li>Logging all files loaded by game.  </li> <li>Improved load times (~2x for file data).  </li> <li>Added support for custom compressed (ZStandard) BFS archives.  </li> <li>and more...  </li> </ul> <p>Dedicated Game Page.  </p>"},{"location":"index-games/#persona-345-pc","title":"Persona 3/4/5 PC","text":"<p>About</p> <ul> <li>PC Games, 2021/2022.  </li> <li>Created Persona Essentials, the Reloaded-II based mod loading solution for Persona Ports.  <ul> <li>Supports replacing archives without repacking archives.  (CRI API Hook)</li> <li>Supports replacing music archives inside archives without repacking.  (File Emulation)</li> <li>Supports automatic merging of <code>.tbl</code> binary files to combine mods.  </li> <li>Skip game intro/fast boot.  </li> <li>Toggle pause on focus loss.  </li> </ul> </li> <li>A lot of contributions to community created mods.  </li> </ul>"},{"location":"index-games/#shadow-the-hedgehog","title":"Shadow The Hedgehog","text":"<p>About</p> <ul> <li>GameCube Game, 2005.</li> <li>Archive Packing Tools (General, Sound, Animation).  </li> <li>Discord (Rich Presence) Support.  </li> <li>Documenting Unused Assets.</li> <li>Various Character Mods.  </li> <li>General File Reversing Work. (Contributions to level editor etc.)  </li> </ul> <p>Dedicated Game Page.  </p>"},{"location":"index-games/#sonic-heroes","title":"Sonic Heroes","text":"<p>About</p> <ul> <li>PC Game, 2004.  </li> <li>Fixing Load Times &amp; Startup Times.  </li> <li>Archive Packing Tools (General, Sound, Text).  </li> <li>Fully Featured Modding API.  </li> <li>Stage Editor.  </li> <li>Widescreen Support.  </li> <li>Modern Controller Support.  </li> <li>Boot To Stage/Debug.  </li> <li>Fixing Crashes &amp; File Size Limits.  </li> <li>Discord (Rich Presence) Support.  </li> <li>Free Camera.  </li> <li>Reverse Engineering/Disassembly Work.  </li> <li>and more...</li> </ul> <p>Dedicated Game Page.  </p>"},{"location":"index-games/#sonic-riders","title":"Sonic Riders","text":"<p>About</p> <ul> <li>PC Game, 2006.  </li> <li>Online Multiplayer: Fully featured with server browser, spectator, no port forward needed etc.  </li> <li>Archive Packing Tools (General, Sound, Texture, Text etc.).    </li> <li>Fully Featured Modding API.  </li> <li>Widescreen Support.  </li> <li>Fixed Frame Pacing. No more microstutter.  </li> <li>Discord Rich Presence Support.  </li> <li>Boot to Menu/Race.  </li> <li>Inject Custom Music.  </li> <li>Custom texture injection/replacement incl. Animated Textures.  </li> <li>Massively improved load &amp; startup times.  </li> <li>Massively improved performance (&gt;5x !!).  </li> <li>Lots of debug tools &amp; file format editors.  </li> <li>Fully restored unbootable prototype build of the game.  </li> <li>Launch game outside launcher &amp; multiple instances.  </li> <li>and many more things...</li> </ul> <p>Dedicated Game Page.  </p>"},{"location":"index-games/#sonic-3-angel-island-revisited","title":"Sonic 3 Angel Island Revisited","text":"<p>About</p> <ul> <li>PC Game, 2019.  </li> <li>Improved frame pacing massively on Windows (Tweet), (Source Code).  </li> <li>People will no longer have to suffer microstutters \ud83d\ude00.</li> <li>My changes were merged and are now part of the official game. Everyone can enjoy them, even with an unmodded client \ud83d\udc9c.  </li> </ul>"},{"location":"index-games/#tokyo-xanadu-ex","title":"Tokyo Xanadu eX+","text":"<p>About</p> <ul> <li>PC Game, 2017.  </li> <li>Reverse Engineered .BRA archive format and wrote unpacker (Source), Release Thread.  <ul> <li>Wrote this program on game's release day.  </li> <li>With this you can extract data for porting to other games.  </li> </ul> </li> </ul>"},{"location":"index-games/#trails-of-cold-steel","title":"Trails of Cold Steel","text":"<p>About</p> <ul> <li>PC Game, 2017.  </li> <li>Wrote unpacker &amp; (de)compressor for .PKG Archives (Source).  </li> <li>General reverse engineering of binary <code>.tbl</code> files.  Source</li> <li>This research allowed for creation of mods such as HD Texture Pack and character replacements.  </li> </ul>"},{"location":"index-games/#trails-in-the-sky","title":"Trails in The Sky","text":"<p>About</p> <ul> <li>PC Game, 2014.  </li> <li>Reverse Engineered &amp; Wrote Converter for Textures and Sprite Animations (Source).  </li> <li>This applies to all games in series (i.e. SC [2016] and 3rd [2017] too).  </li> </ul> <p></p> <p>Converter can both extract and produce new sprites that are 1:1 with the original game.  </p>"},{"location":"index-libraries/","title":"Libraries, Tools &amp; Software","text":"<p>This page lists the various original released general purpose libraries &amp; tools I've created, i.e. projects where I am the main author.  Many of these libraries I actively still maintain.</p> <p>Info</p> <p>Any game related library/tool will be listed under the Games section. Items are shown in roughly chronological order.  </p>"},{"location":"index-libraries/#nexus-mods-nx-archive-format","title":"Nexus Mods (.nx) Archive Format","text":"<p>About</p> <ul> <li>Summary: High Performance Archive Format; bottlenecked by RAM.  </li> <li>Release Date: 2023, Source </li> <li>Semi-SOLID archive format based on chunked ZStandard files.  </li> <li>Archive sizes halfway between <code>.zip</code> and <code>.7z</code> ultra; with &gt;10GB/s extraction speed that bottlenecks any NVMe.  </li> <li>Open source, under GPLv3.  </li> <li>Written at work/on company hours.  </li> </ul>"},{"location":"index-libraries/#structured-binary-diff-library","title":"Structured Binary Diff Library","text":"<p>About</p> <ul> <li>Summary: Creates diffs of binary data with known structure.  </li> <li>Release Date: 2022, Source </li> <li>Uses SIMD Intrinsics, achieving ~16GB/s single thread on my 2014 i7-4790k machine.  </li> <li>Used to merge e.g. Item placement layouts in games, arrays of item parameters, etc.  </li> <li>Learn More </li> </ul>"},{"location":"index-libraries/#controller-support-for-wpf","title":"Controller Support for WPF","text":"<p>Sewer56.UI.Controller</p> <ul> <li>Summary: Adds controller support for XInput &amp; DInput controllers to WPF applications.  </li> <li>Release Date: 2022, Source </li> <li>Zero Allocation.  </li> </ul> <p>Reloaded-II operated using an Xbox Controller.</p>"},{"location":"index-libraries/#update-a-self-update-library","title":"Update: A Self-Update Library","text":"<p>Sewer56.Update</p> <ul> <li>Summary: Lightweight library that adds update support to your applications.  </li> <li>Release Date: 2021, Source </li> <li>Can be used for more than just main application, e.g. plugins.  </li> <li>Supports delta compression using Delta Patch Generator under the hood.  </li> <li>Supports full Semantic Versioning.  </li> <li>Can clean up unused files from application folder after updates.  </li> </ul> <p></p> <p>Example: Reloaded-II update shipped using delta compression. </p>"},{"location":"index-libraries/#delta-patch-generator","title":"Delta Patch Generator","text":"<p>Sewer56.DeltaPatchGenerator</p> <ul> <li>Summary: Creates patches that transform one version of a folder into another version, with delta compression.  </li> <li>Release Date: 2021, Source </li> <li>Uses optimised port of VCDiff as base algorithm, with my own performance improvements.  </li> <li>Only data that has changed within the files is stored, and any new files.  </li> <li>This means download sizes are very small!  </li> </ul>"},{"location":"index-libraries/#dolphin-image-optimizer","title":"Dolphin Image Optimizer","text":"<p>DolphinImageOptimizer</p> <ul> <li>Summary: Batch converter of textures to use with Dolphin Emulator (or any PC Games).  </li> <li>Release Date: 2021, Source </li> <li>Automatically converts a source folder of PNG textures to GPU optimised DDS files.  </li> <li>Can create dummy textures for fully transparent textures.  </li> <li>Automatically scales images based on target resolution e.g. 1440p, 4K.  <ul> <li>This way you can make multiple 'versions' of your texture packs.  </li> <li>The resulting output uses less RAM, space and downloads faster.  </li> </ul> </li> </ul> <pre><code>DolphinImageOptimizer 1.0.0\nCreated by Sewer56, licensed under GNU LGPL V3\n\n  --source             Required. The folder to optimize.\n\n  --target             Required. (Default: P960) Target resolution to optimize\n                       image size to. Set to first option greater than desired\n                       screen resolution. Valid values: P960, P1920, P3840\n\n  --optimization       (Default: Medium) PNG Optimization Level. Use Maximum if\n                       releasing as PNG, Medium for testing. This is auto set to\n                       Minimal when Publishing as DDS. Valid values: Maximum,\n                       Medium, Minimum\n\n  --publish            (Default: None) Converts textures to DDS and deletes\n                       original. Recommended BC7 for Dolphin. DXTAuto uses \n                       DXT1 when no transparency, DXT5 when transparency. \n                       If you know better, use PublishAdvanced instead. \n                       Valid values: None, DXT1, DXT5, DXTAuto, R8G8B8A8, BC7\n\n  --publishadvanced    Custom format to pass to TexConv. e.g. BC5_UNORM\n</code></pre>"},{"location":"index-libraries/#bitstream","title":"BitStream","text":"<p>Sewer56.BitStream</p> <ul> <li>Summary: Fastest .NET Bitstream Library, Zero Allocation, No Virtual Function Calls  </li> <li>Release Date: 2021, Source </li> </ul>"},{"location":"index-libraries/#number-utilities","title":"Number Utilities","text":"<p>Sewer56.NumberUtilities</p> <ul> <li>Summary: Low level math extensions. e.g. Generic math, zero overhead lossy number compression etc.  </li> <li>Release Date: 2020, Source </li> <li>Partially superseded by newer .NET Runtime features (e.g. Static Abstracts in Interfaces)  </li> </ul>"},{"location":"index-libraries/#controller-input-library","title":"Controller Input Library","text":"<p>Reloaded.Input</p> <ul> <li>Summary: Library for managing USB game controllers that wraps around DInput and XInput.  </li> <li>Release Date: 2020, Source </li> <li>Supports Remapping, Hotplugging, Configurator and many other essential features.  </li> <li>Zero allocation.  </li> </ul> <p></p> <p>Screenshot of default configurator application (embeddable in your program) with sample controller bindings.</p>"},{"location":"index-libraries/#dear-imgui-net-bindings","title":"Dear ImGui .NET Bindings","text":"<p>About</p> <ul> <li>Summary: .NET Binding for Dear ImGui, w/ features not present in other bindings.  </li> <li>Release Date: 2020, Source </li> <li>Exposes <code>Internal</code> ImGui API omitted from other wrappers.  </li> <li>As well as Win32, D3D9/11/12, OGL2/3, GLFW, SDL2 &amp; Vulkan backends other bindings lack.  </li> <li>Operates with minimal code changes/fixes, low maintenance library.  </li> </ul> <p></p> <p>DearImGuiSharp used my modification of a commercial game [Sonic Riders].  </p>"},{"location":"index-libraries/#net-core-install-checker","title":".NET Core Install Checker","text":"<p>NetCoreInstallChecker</p> <ul> <li>Summary: Library to detect missing .NET (core) installations &amp; (optionally) installs the runtime.  </li> <li>Release Date: 2020, Source </li> </ul> <pre><code>// runtimeConfigPath: Path to runtimeconfig.json\nvar finder    = new FrameworkFinder(is64Bit);\nvar resolver  = new DependencyResolver(finder);\nvar result    = resolver.Resolve(RuntimeOptions.FromFile(runtimeConfigPath));\n\n// Check if dependencies are missing.\nif (!result.Available) \n{\n    // Do something with missing dependencies.\n    // For example:\n    foreach (var dependency in result.MissingDependencies)\n    {\n        var downloader = new FrameworkDownloader(dependency.NuGetVersion, dependency.FrameworkName);\n        Console.WriteLine($\"Framework {dependency.Name} required to run this application is missing.\");\n        Console.WriteLine($\"You can download it using the following URL {await downloader.GetDownloadUrlAsync(Architecture.x86)}\");\n    }\n}\n</code></pre>"},{"location":"index-libraries/#dolphin-emulator-memory-access","title":"Dolphin Emulator Memory Access","text":"<p>Dolphin.Memory.Access</p> <ul> <li>Summary: Access Dolphin Emulator's Emulated Memory from C# code.  </li> <li>Release Date: 2019, Source </li> </ul> <p></p> <p>Can be used to e.g. show state of Dolphin Emulator's currently played application.  </p>"},{"location":"index-libraries/#net-runtime-bootstrapper","title":".NET Runtime Bootstrapper","text":"<p>Reloaded.Core.Bootstrap</p> <ul> <li>Summary: Library to easily load .NET Runtime (CoreCLR) into native process.  </li> <li>Release Date: 2019, Source </li> <li>Created when runtime hosting became first available in .NET Core 3 Preview 6.  </li> </ul> <p></p>"},{"location":"index-libraries/#network-messaging-library","title":"Network Messaging Library","text":"<p>Reloaded.Messaging</p> <ul> <li>Summary: Near zero overhead library for packing, unpacking and handling messages sent over network.  </li> <li>Release Date: 2019, Source </li> <li>Throughput of 10+ Million messages per second (unpack + pack) on a 2014 4790k based machine.  </li> <li>Provides integration for popular serializers, such as <code>MessagePack</code> &amp; <code>System.Text.Json</code>.  </li> <li>Optimised down to assembly/JIT level. Allocation free.  </li> </ul> <p></p> <p>Among other uses, this library is used in Reloaded-II to communicate with mod loader and perform actions like loading and unloading game modifications at runtime.  </p>"},{"location":"index-libraries/#wpf-theme","title":"WPF Theme","text":"<p>About</p> <ul> <li>Summary: Custom WPF theme/style, for Reloaded-II.  </li> <li>Release Date: 2019, Source</li> </ul> <p></p> <p>Includes styles for almost every control in WPF and fits in under 500kB, including space taken by custom font. Supports extra theming, animated window borders, custom controls, animations and more.</p>"},{"location":"index-libraries/#reloaded-core-libraries","title":"Reloaded Core Libraries","text":"<p>About</p> <ul> <li>Summary: Set of low level, high performance libraries for manipulating applications.  </li> <li>Release Date: 2019+, Source </li> <li>Actively maintained. Supports all latest .NET features including Assembly Trimming etc.  </li> <li>Originally created for Reloaded-II.  </li> </ul> <p></p> <p>Reloaded.Memory</p> <ul> <li>Summary: General purpose low level high performance memory and IO manipulation library.  </li> <li>Example Features:  <ul> <li>Abstractions over memory &amp; pointers, e.g. Convert pointers to refs, use LINQ over unmanaged memory.   </li> <li>High performance streams for reading binary files, &gt;10x read perf over .NET 5 <code>FileStream</code>.  </li> <li>Memory utilities, e.g. Circular Buffers, Generic Read Extensions for Streams, Fixed Endian Stream Readers etc.  </li> </ul> </li> </ul> <p>Reloaded.Memory.Buffers</p> <ul> <li>Summary: Efficiently allocate memory shared between different external applications that lasts lifetime of the current process.  </li> <li>Note: Basically for allocating memory to be used by Reloaded.Hooks for the native code it generates.  </li> </ul> <p>Reloaded.Injector</p> <ul> <li>Summary: A DLL Injection library that supports injecting DLLs into a 32-bit process from a 64-bit process.  </li> <li>Eliminates the need for 2 separate 'injector' programs and, has some nice features like calling native functions in other processes with parameters too.  </li> </ul> <p>Reloaded.Assembler</p> <ul> <li>Summary: Wrapper over Flat Assembler for .NET. Zero allocation.  </li> <li>When making this library, I contributed towards getting FASM [written in assembler] to work on Windows x64.  </li> <li>First open source assembler solution for .NET that supported x64.  </li> </ul> <p>Reloaded.Hooks</p> <ul> <li>Summary: The most advanced .NET hooking library. Alternative to libraries like MS Detours, and Minhook.  </li> <li>Supports infinite stacking of hooks, patching other hooks, etc.  </li> <li>Supports custom calling conventions e.g. Function params. in custom registers. Only library to do so at release.  </li> <li>Extremely high compatibility. At time of writing was only library that could hook Direct3D9's <code>EndScene</code> with Steam Overlay without Steam specific hacks.  </li> </ul> <p>Reloaded.Memory.Sigscan</p> <ul> <li>Summary: High performance SIMD based scanner for byte patterns, with support for masking.  </li> <li>Fastest .NET library at time of writing.  </li> <li>Hits over 300GB/s on Ryzen 5000 systems, limited by RAM speeds.  </li> <li>Mainly used in Malware analysis/scanning (AV Software) and game hacking.  </li> </ul>"},{"location":"index-libraries/#libreloaded","title":"libReloaded","text":"<p>About</p> <ul> <li>Summary: Set of low level libraries for manipulating processes [modifying games].  </li> <li>Release Date: 2018, Source.  </li> <li>Status: Rewritten and in favour of above listed core libraries.  </li> </ul>"},{"location":"index-libraries/#xos-image-compressor","title":"XOS Image Compressor","text":"<p>About</p> <ul> <li>Summary: Bash script for efficient batch compression of images.  </li> <li>Release Date: 2016, 2017, Source Code.  </li> </ul> <p></p>"},{"location":"index-libraries/#live-text-dumper-youtube-like-its-2009","title":"Live Text Dumper: YouTube Like it's 2009","text":"<p>About</p> <ul> <li>Summary: Record YouTube tutorials without a microphone.  </li> <li>Release Date: 2017, Source Code.  </li> </ul> <p>A simple .NET program that allows you to write text to a text file in the background as if typing to a text editor. Combine with a video recorder like OBS and you can make tutorials without a microphone.  </p>"},{"location":"index-libraries/#halogenos-art","title":"HalogenOS: Art","text":"<p>About</p> <ul> <li>Summary: Artwork for HalogenOS (XOS), a custom Android ROM/Distribution. </li> <li>Release Date: 2016, Source </li> <li>My work included logo, phone wallpapers, forum banners, announcement images, boot logo, charging logo, OS theme and more.  </li> </ul> <p></p>"},{"location":"index-libraries/#oxyslim","title":"OxySlim","text":"<p>About</p> <ul> <li>Summary: Custom OxygenOS based Android ROM for the OnePlus 2.  </li> <li>Release Date: 2015, XDA Forums </li> </ul> <p></p> <p>Notable for being the first stock-based ROM to bring working theme(s) to OxygenOS, and removing OnePlus' Excessive Telemetry (Spying), which I originally shared some details about here. </p>"},{"location":"index-libraries/#gin2jellybean-extended","title":"Gin2JellyBean Extended","text":"<p>About</p> <ul> <li>Summary: A Custom Android ROM for the Xperia Play based on 2.3.7 stock firmware.  </li> <li>Release Date: 2012, XDA Forums </li> </ul> <p></p> <p>A enhanced version of another popular custom ROM on the Xperia Play. Notably this one brought another set of popular enhancements such as skipping tracks by holding volume key, a centred clock and the AC!D Audio Engine pre-baked. Was the first stock-based Multiboot Supported ROM.  </p> <p>Additional enhancements were available through extra downloadable zips for customisation.  </p>"},{"location":"games/btd6/","title":"Bloons TD 6","text":"<p>Info</p> <ul> <li>Platform: PC  </li> <li>Release Date: 2004  </li> </ul>"},{"location":"games/btd6/#salaried-monkeys","title":"Salaried Monkeys","text":"<p>About</p> <ul> <li>Summary: Pay your monkeys a per-round salary, rather than buying them up front!  </li> <li>Release Date: 2022 [Source &amp; Readme].  </li> <li>Most advanced custom game mode at release.  </li> <li>First Bloons mod with CI/CD and Unit Testing.  </li> <li>First Bloons mod with full co-op multiplayer integration/support! <ul> <li>Responsible for adding multiplayer functionality to Bloons Mod Helper.  </li> <li>Responsible for creation of Multi User Mod.  </li> <li>Responsible for bug fix in a MelonLoader component [Assembly Unhollower].  </li> </ul> </li> <li>Significant portions of game code had to be rewritten to enable this mod since it changes the game so fundamentally.  <ul> <li>Including all UI elements with prices.  </li> <li>Game save logic.  </li> <li>And special behaviours based on cost, e.g. Ball of Light.  </li> </ul> </li> </ul> <p></p> <p>Top left displays current cash and salary to be paid next round.  </p>"},{"location":"games/btd6/#multi-user","title":"Multi User","text":"<p>About</p> <ul> <li>Summary: Allows you to run multiple instances of the game!  </li> <li>Release Date: 2022 [Source].  </li> <li>Allows you to sign in with multiple game accounts without conflicts.  </li> </ul> <p></p>"},{"location":"games/cold-steel/","title":"Trails of Cold Steel","text":"<p>About</p> <ul> <li>PC Game, 2017.  </li> <li>Wrote unpacker &amp; (de)compressor for .PKG Archives (Source).  </li> <li>General reverse engineering of binary <code>.tbl</code> files.  Source</li> <li>This research allowed for creation of mods such as HD Texture Pack and various character replacements.  </li> </ul>"},{"location":"games/common/","title":"Games: Common &amp; General","text":"<p>About</p> <ul> <li>Contains anything generic that is game related, but is generic and applies multiple games.  </li> </ul>"},{"location":"games/common/#reloaded-ii-mod-loader","title":"Reloaded-II (Mod Loader)","text":"<p>About</p> <ul> <li>The most advanced .NET based Mod Loader &amp; Manager Combo for native games.  </li> <li>Full Set of Game Hacking Libraries.  </li> <li>Full Dedicated Wiki.  </li> <li>Very High Performance.  </li> <li>Modular And Extensible.  </li> <li>Supports any 32 or 64-bit game.  </li> <li>Integrated Logging.  </li> <li>Dependency System.  </li> <li>Execute Code before Game Runs a single Line.  </li> <li>Load &amp; Unload mods at runtime.  </li> <li>Full Debugging Support including Edit &amp; Continue.  </li> <li>Automatic Installer &amp; Updates.  </li> <li>Support for Delta Compression in Updates.  </li> <li>Mod Sets/Mod Collections.  </li> <li>Does Not Modify Game Directory! Clean Uninstall!  </li> <li>Disk Friendly: No file duplication, no extra residue.  </li> <li>Controller Support.  </li> <li>and much more... </li> </ul> <p>Info</p> <ul> <li>Below are individual universal mods for Reloaded that don't fit any other category in this index.  </li> </ul>"},{"location":"games/common/#file-redirector","title":"File Redirector","text":"<p>Reloaded Universal File Redirector</p> <ul> <li>Summary: Allows adding/replacing game files without physically modifying game folder.  </li> <li>Release Date: 2019 Source Code </li> <li>Features:  <ul> <li>API (dynamically add files etc.)  </li> <li>Log all files accessed by application.  </li> <li>Log replaced files.  </li> </ul> </li> </ul> <p></p> <p>What is Sonic Heroes loading right now? And what file is it being replaced with?  </p>"},{"location":"games/common/#directinput-hotkey-fix","title":"DirectInput Hotkey Fix","text":"<p>DInput Please Cooperate</p> <ul> <li>Summary: Fixes cases where a DirectInput application prevents you from using your hotkeys.  </li> <li>Release Date: 2020 Source Code </li> </ul>"},{"location":"games/common/#file-emulation-framework","title":"File Emulation Framework","text":"<p>File Emulation Framework</p> <ul> <li>Summary: Framework for emulating archive files at Windows API level to enable modding of games without repacking massive (2GB+) archives.  </li> <li>Release Date: 2022 Source Code </li> <li>Another crucial component to Reloaded's Core Philosophy. Don't touch game folder. No performance loss. Run anywhere.  </li> <li>Features:  <ul> <li>Works with any application, game or tool even console emulators.  </li> <li>Supported recursive/nested emulation of files, e.g. archive inside archive.  </li> <li>Negligible (unnoticeable) overhead.  </li> <li>Currently supports 5 archive formats (and counting!!).  </li> <li>Extensive Unit Tests &amp; asserts for runtime bug avoidance.  </li> </ul> </li> </ul> <p></p> <p>Imagine adding/removing/replacing files in these archives without requiring any unpacking or repacking, without using any additional disk space and with zero overhead in a way that works even with emulated games.  </p> <p>Yes, that's a thing now!  </p>"},{"location":"games/common/#dear-imgui-hook","title":"Dear ImGui Hook","text":"<p>Reloaded.Imgui.Hook</p> <ul> <li>Summary: Library to add Dear ImGui into your game mod.  </li> <li>Release Date: 2020 Source Code </li> <li>Features:<ul> <li>Inject Dear ImGui into any D3D9/11 game, x86 or x64.  </li> <li>Extensible. Can add support for other APIs without recompiling.  </li> <li>Supports viewports and docking. You can drag ImGui windows outside game window!!  </li> <li>No Pause on Focus Loss [Universal, for any game].  </li> </ul> </li> </ul> <p></p>"},{"location":"games/common/#cri-middleware","title":"CRI Middleware","text":"<p>Info</p> <ul> <li>The items below apply to all games using CRI Middleware between 2000 and 2021.  </li> <li>It is particularly popular among developers from Japan.  </li> </ul>"},{"location":"games/common/#cri-filesystem-v2-hook","title":"CRI FileSystem V2 Hook","text":"<p>CRI FileSystem V2 Hook</p> <ul> <li>Summary: Adds Mod Support to Modern Games using CRI .CPK Archives.  </li> <li>Release Date: 2022 Source Code </li> <li>Features:  <ul> <li>Should support games from 2017 onwards, maybe older.  </li> <li>Hot Reload (Add/Replace files without app restart).  </li> <li>API (dynamically add files etc.)</li> <li>Log files accessed by application.</li> <li>Replace music in AWB music Archives inside CPKs without using additional disk space, via an extension mod.  </li> </ul> </li> </ul> <p></p> <p>Well, this mod certainly enables some interesting use cases...</p>"},{"location":"games/common/#cpk-reading-library","title":".CPK Reading Library","text":"<p>CriFsV2Lib</p> <ul> <li>Summary: Low level library for unpacking files from .CPK Archives.  </li> <li>Release Date: 2022 Source Code </li> <li>Features:  <ul> <li>Minimalist, self contained in 25KiB.  </li> <li>Maximum performance, all code hand tuned for best x64 assembly output.  <ul> <li>Faster than original CRI code present in retail games (in all parsing, decompression &amp; descrambling).  </li> </ul> </li> </ul> </li> </ul> <p></p> <p>Included GUI tool for extraction.  </p>"},{"location":"games/common/#adx-w-id3","title":"ADX w/ ID3","text":"<p>ADX ID3</p> <ul> <li>Summary: Custom variant of CRI's ADX Audio Format, with support for ID3 Meta Tags.  </li> <li>Release Date: 2022 Source Code </li> <li>Intended for displaying information about current music track in-game with support mod(s).  </li> <li>Features:  <ul> <li>Backwards compatible (games unaware of ID3 can still playback ADX).  </li> <li>Reference ID3 Data Embedder/Extractor.  </li> <li>Losslessly add ID3 metadata to existing files.  </li> <li>Full stable specification on reading/writing ID3 data.  </li> </ul> </li> </ul> <pre><code># dotnet Sewer56.Adx.Id3.Tool.dll view --source \"Digital Circuit.adx\" \n\nTitle: Digital Circuit (original version)\nArtist(s): \u702c\u4e0a\u7d14\nAlbum: Shadow the Hedgehog: Original Soundtrax\nYear: 2006\nGenre(s): Soundtrack\nTrack: 44\nDisc No: 1\n</code></pre> <p>Reading info from a custom ADX with ID3 support.  </p>"},{"location":"games/common/#afs-library","title":".AFS Library","text":"<p>AfsLib</p> <ul> <li>Summary: Library for parsing, unpacking &amp; packing CRI .AFS archives.  </li> <li>Release Date: 2019 Source Code </li> <li>Features:  <ul> <li>Fast file previewer (parse metadata near zero overhead).  </li> <li>Low allocation.  </li> </ul> </li> </ul> <pre><code>var data = File.ReadAllBytes(afsFilePath);\nif (AfsFileViewer.TryFromFile(data, out var afsViewer)) \n{\n    // Do stuff. This easy to use!\n};\n</code></pre>"},{"location":"games/common/#cri-filesystem-hook","title":"CRI FileSystem Hook","text":"<p>CRI FileSystem Hook</p> <ul> <li>Summary: Mod for CRI games roughly between 2000-2010 that fixes a number of issues.  </li> <li>Release Date: 2019 Source Code </li> <li>Features:  <ul> <li>Fast cold startup times (~5 seconds to 0).  </li> <li>Allows file replacement.   </li> <li>Allows launching files not present during game launch.  </li> </ul> </li> </ul>"},{"location":"games/common/#sega-prs-compressor","title":"SEGA PRS Compressor","text":"<p>dlang-prs</p> <ul> <li>Summary: High performance custom compressor/decompressor for SEGA's PRS compression format used since the Sega Saturn.  </li> <li>Release Date: 2018 Source Code </li> <li>Fastest PRS Compressor/Decompressor with best compression ratio (at time of writing).  </li> </ul>"},{"location":"games/flatout-2/","title":"FlatOut 2","text":"<p>Info</p> <ul> <li>Platform: PC  </li> <li>Release Date: 2004  </li> </ul>"},{"location":"games/flatout-2/#flatout-2-mod-loader","title":"FlatOut 2 Mod Loader","text":"<p>FlatOut 2 Mod Loader</p> <ul> <li>Summary: A Reloaded-II based solution for loading mods.  </li> <li>Release Date: 2022 [Source Code].  </li> <li>Features:  <ul> <li>Load mods from outside game folder.  </li> <li>Load mods without modifying <code>patch</code> file in game folder.  </li> <li>Log all files loaded by game.  </li> <li>Improved load times (~2x for file data).  </li> <li>Make game size smaller (optional).  </li> <li>Added support for custom compressed (ZStandard) BFS archives.  </li> </ul> </li> </ul> <p>Cleaned up game folder with mod, faster loads, much smaller file size:  </p> <p></p> <p>File size of a game mod before, and after mod loader compression + packing enhancements:  </p> <p></p>"},{"location":"games/flatout-2/#flatout-sdk","title":"FlatOut SDK","text":"<p>FlatOut SDK</p> <ul> <li>Summary: Library for modifying FlatOut from inside game process.  </li> <li>Release Date: 2022 [Source Code].  </li> <li>Updated periodically as I update my mods.  </li> </ul>"},{"location":"games/flatout-2/#discord-rich-presence","title":"Discord Rich Presence","text":"<p>FlatOut2.Utils.RichPresence</p> <ul> <li>Summary: Adds Rich Presence support to FlatOut 2.  </li> <li>Release Date: 2022 [Source Code].  </li> <li>Displays current stage, mode, multiplayer lobby, custom stages and cars.  </li> <li>Supports Discord's Join and Invite Features.  </li> </ul> <p></p>"},{"location":"games/flatout-2/#multiplayer-name-changer","title":"Multiplayer Name Changer","text":"<p>FlatOut2.Utils.MPNameChange</p> <ul> <li>Summary: Change your multiplayer name without making new singleplayer profile.  </li> <li>Release Date: 2022 [Source Code].  </li> <li>Allows you to names longer than game normally allows, up to 64 characters.  </li> <li>Can update name by exiting and re-joining lobby, game restart not required.  </li> </ul>"},{"location":"games/persona-pc/","title":"Persona 3/4/5 PC","text":"<p>About</p> <ul> <li>PC Games, 2021/2022.  </li> <li>Created Persona Essentials, the Reloaded-II based mod loading solution for Persona Ports.  <ul> <li>Supports replacing archives without repacking archives.  (CRI API Hook)</li> <li>Supports replacing music archives inside archives without repacking.  (File Emulation)</li> <li>Supports automatic merging of <code>.tbl</code> binary files to combine mods.  </li> <li>Skip game intro/fast boot.  </li> <li>Toggle pause on focus loss.  </li> </ul> </li> <li>A lot of contributions to community created mods.  </li> </ul>"},{"location":"games/shadow-the-hedgehog/","title":"Shadow The Hedgehog","text":"<p>Info</p> <ul> <li>Platform: GameCube  </li> <li>Release Date: 2005  </li> </ul>"},{"location":"games/shadow-the-hedgehog/#discord-rich-presence","title":"Discord Rich Presence","text":"<p>ShadowTheHedgehog.RPC</p> <ul> <li>Summary: Rich Presence... for a GameCube Game!  </li> <li>Release Date: 2018 [Original], 2019 [Current].  </li> </ul> <p></p> <p>Reading memory from an emulated GameCube game [that works with any emulator version] was an interesting challenge.  </p>"},{"location":"games/shadow-the-hedgehog/#archive-packerunpacker","title":"Archive Packer/Unpacker","text":"<p>HeroesONE Reloaded</p> <ul> <li>Summary: Packer and Unpacker for Shadow .ONE Archives.  </li> <li>Release Date: 2018 [Source].  </li> <li>Massive improvement over previously existing packer, HeroesONE.  </li> <li>Uses fastest &amp; most optimal compressor available, made by yours truly.  </li> <li>Automatic Windows Explorer file associations [doubleclick <code>.one</code> file and it works].  </li> <li>Caching for improved repacking speeds.  </li> <li>and more...</li> </ul> <p></p>"},{"location":"games/shadow-the-hedgehog/#sound-effect-packer-unpacker","title":"Sound Effect Packer &amp; Unpacker","text":"<p>PACTool</p> <ul> <li>Summary: Import and Export Sound Effects from Xbox version of the game.    </li> <li>Release Date: 2018 [Source].  </li> </ul> <p></p>"},{"location":"games/shadow-the-hedgehog/#documenting-unused-assets","title":"Documenting Unused Assets","text":"<p>Documenting Unused Assets</p> <ul> <li>Summary: Hacking game files and code to re-enable unused content within the game.  </li> <li>A lot of my data mining work is documented on TCRF.  </li> </ul> <p>An unused level 'STG9900' present only on GameCube, accessed via hacking. </p>"},{"location":"games/shadow-the-hedgehog/#various-character-mods","title":"Various Character Mods","text":"<p>Character Mods</p> <ul> <li>Summary: World's first character mods with custom animations.  </li> <li>Release Date: 2017  </li> <li>Most mods are archived under the following GitHub repository.  </li> <li>Did the reverse engineering work to make proper model blending &amp; animation replacement possible.  </li> </ul>"},{"location":"games/shadow-the-hedgehog/#animation-archive-repacker","title":"Animation Archive Repacker","text":"<p>ShadowMTPSharp</p> <ul> <li>Summary: Library for unpacking/repacking animation archives to enable editing animations.  </li> <li>Release Date: 2017 Original/Deprecated, 2019 Current </li> <li>Reverse engineering work also done from scratch.  </li> </ul> <p>Using a modified idle animation.  </p>"},{"location":"games/sonic-3-air/","title":"Sonic 3 A.I.R.","text":"<p>About</p> <ul> <li>PC Game, 2019.  </li> <li>Improved frame pacing massively on Windows (Tweet), (Source Code).  </li> <li>People will no longer have to suffer microstutters \ud83d\ude00.</li> <li>My changes were merged and are now part of the official game. Everyone can enjoy them, even with an unmodded client \ud83d\udc9c.  </li> </ul>"},{"location":"games/sonic-heroes/","title":"Sonic Heroes","text":"<p>Info</p> <ul> <li>Platform: PC  </li> <li>Release Date: 2004  </li> </ul>"},{"location":"games/sonic-heroes/#one-archive-merger","title":"ONE Archive Merger","text":"<p>ONE Archive Redirector</p> <ul> <li>Summary: Allows you to merge .ONE archives at runtime, allowing for mods to be better mixed.  </li> <li>Release Date: 2020 Original/Deprecated, 2022 Current </li> <li>Imagine merging 2 zip files at runtime but with virtually 0 overhead. It's that sort of deal.  </li> </ul>"},{"location":"games/sonic-heroes/#physics-editor","title":"Physics Editor","text":"<p>Adventure.Physics.Swap</p> <ul> <li>Summary: Fully Featured Physics Editor  </li> <li>Release Date: 2019 Source Code </li> <li>Changes physics in real time, for testing.   </li> <li>Also supports Sonic Adventure DX &amp; 2.  </li> </ul> <p></p>"},{"location":"games/sonic-heroes/#stage-injector","title":"Stage Injector","text":"<p>Heroes.StageInjector</p> <ul> <li>Summary: Allows importing custom stages from external Reloaded mods without having to write any code.  </li> <li>Release Date: 2019 Source Code </li> <li>Features:<ul> <li>Load custom stages.  </li> <li>Allow overwriting spawn points for custom stages.  </li> <li>Allow overwriting grindable rails for custom stages.  </li> <li>Play 2P stages in 1P without crashing.  </li> </ul> </li> </ul> <p></p> <p>Radical Highway in Sonic Heroes by Shadowth117.  </p>"},{"location":"games/sonic-heroes/#fast-boot","title":"Fast Boot","text":"<p>Heroes Debug Boot</p> <ul> <li>Summary: Boot the game straight into a level or one of the debug menus.  </li> <li>Release Date: 2019 Source Code </li> </ul>"},{"location":"games/sonic-heroes/#hint-editor","title":"Hint Editor","text":"<p>Heroes.Hint.Editor</p> <ul> <li>Summary: Allows you to edit messages displayed by various triggers throughout the game.  </li> <li>Release Date: 2019 Source Code </li> <li>Originally created to display custom messages in TAS videos without desyncing them.  </li> </ul> <p></p>"},{"location":"games/sonic-heroes/#heroes-rgb-mod","title":"Heroes RGB Mod","text":"<p>Heroes.Colourizer</p> <ul> <li>Summary: Adds RGB lighting effects to various parts of the game.  </li> <li>Release Date: 2019 Source Code </li> </ul> <p>Colourizer with enabled RGB gates and jump balls.  </p>"},{"location":"games/sonic-heroes/#heroes-sdk-disassembly","title":"Heroes SDK &amp; Disassembly","text":"<p>Heroes.SDK</p> <ul> <li>Summary: Library containing low level code to mod the game as well as read/write the game's file formats.  </li> <li>Release Date: 2019 Source Code </li> <li>All other current non-deprecated mods on this list use this library under the hood.  </li> <li>The level editor uses it too!  </li> </ul> <pre><code>Camera.IsCameraEnabled = false; // Takes away camera control from the game.\nif (State.IsInLevel()) \n{\n    /* Do Stuff with Camera */\n    ref var camera = ref Camera.Cameras[0];\n    camera.MoveBy(new Vector3(1, 0, 0));\n}\n</code></pre> <p>High level API like this, allows for easy access of various game internals.  </p>"},{"location":"games/sonic-heroes/#discord-rich-presence","title":"Discord Rich Presence","text":"<p>Discord Rich Presence</p> <ul> <li>Summary: Presents your current play status on Discord.  </li> <li>Release Date: 2018 Original/Deprecated, 2019 Current </li> <li>Features:  <ul> <li>Show your current activity on Discord.  </li> <li>Supports multiplayer modes, including score tracking.  </li> <li>Time elapsed syncs to stage timer.  </li> </ul> </li> </ul> <p></p>"},{"location":"games/sonic-heroes/#free-camera-mod","title":"Free Camera Mod","text":"<p>About Free Camera</p> <ul> <li>Summary: Allows you to move your camera freely.  </li> <li>Release Date: 2018 Original/Deprecated, 2019 Current </li> <li>Features:  <ul> <li>Freeze game world.  </li> <li>Rotation on all 3 axis (including roll).  </li> <li>Teleport player to camera.  </li> <li>Toggle HUD visibility.  </li> <li>No culling issues. Stuff away from player character will render.  </li> </ul> </li> </ul>"},{"location":"games/sonic-heroes/#heroes-essentials","title":"Heroes Essentials","text":"<p>About Heroes Essentials</p> <ul> <li>Summary: Set of modifications for running Sonic Heroes on Modern Machines.  </li> <li>Release Date: 2018+  </li> </ul>"},{"location":"games/sonic-heroes/#heroes-graphics-essentials","title":"Heroes Graphics Essentials","text":"<p>Heroes Graphics Essentials</p> <ul> <li>Summary: Provides general essentials related to graphics and overall game configuration.  </li> <li>Release Date: 2018 Original/Deprecated, 2019 Current </li> <li>Features:  <ul> <li>Add support for borderless and resizable windowed.  </li> <li>Adds widescreen support for any aspect ratio.  </li> <li>Instant stage load times (from 5 to 1 second in fullscreen mode).  </li> <li>Remove framerate cap from 2P.  </li> <li>Don't slow down game when window is unfocused.  </li> <li>Remove subtitles &amp; character voices.  </li> <li>Fixes loading crashes at certain aspect ratios.  </li> <li>and more...</li> </ul> </li> </ul> <p></p> <p>Multiplayer with custom aspect ratio.  </p>"},{"location":"games/sonic-heroes/#modern-controller-support","title":"Modern Controller Support","text":"<p>Heroes Controller Hook</p> <ul> <li>Summary: Adds support for modern Game Controllers to Sonic Heroes.  </li> <li>Release Date: 2018 Original/Deprecated, 2019 Current </li> <li>Adds support for remapping controllers.  </li> <li>Adds support for controller hotplugging.  </li> <li>Adds support for XInput (360) based controllers.  </li> <li>Allows for deadzone adjustment, inverting axis etc.  </li> <li>Restores ability to rotate camera using triggers missing from PC version.  </li> <li>Restores ability to control 3P/4P, used in some debug functions.</li> <li>Provides an API for mods to inject their own inputs.  </li> <li>and much more...</li> </ul> <p></p>"},{"location":"games/sonic-heroes/#cold-boot-time-fix","title":"Cold Boot Time Fix","text":"<p>CRI FileSystem Hook</p> <ul> <li>Summary: Fixes long game start times after a PC reboot or long idle period.  </li> <li>Release Date: 2018 Heroes Only/Deprecated, 2019 All CRI Games/Current </li> <li>Cold boot start improved from ~10 seconds to 1 second.  </li> </ul>"},{"location":"games/sonic-heroes/#bypass-file-size-limits","title":"Bypass File Size Limits","text":"<p>TONER</p> <ul> <li>Summary: Allows you to bypass hardcoded limits and load <code>.one</code> archives with any file size.  </li> <li>Release Date: 2018 Original/Deprecated, 2019 Current </li> <li>The developers hardcoded file size limits for each file type in archives.  </li> <li>This mod allows you to circumvent that.  </li> </ul>"},{"location":"games/sonic-heroes/#draw-distance-unlimiter","title":"Draw Distance Unlimiter","text":"<p>Draw Distance Unlimiter</p> <ul> <li>Summary: Allows you to extend object render distance by a fixed scale.  </li> <li>Release Date: 2020 Source Code </li> </ul>"},{"location":"games/sonic-heroes/#sound-effect-packer-unpacker","title":"Sound Effect Packer &amp; Unpacker","text":"<p>PACTool</p> <ul> <li>Summary: Import and Export Sound Effects from PC &amp; Xbox versions of the game.    </li> <li>Release Date: 2018 [Source].  </li> </ul> <p></p>"},{"location":"games/sonic-heroes/#level-editor","title":"Level Editor","text":"<p>Heroes Power Plant</p> <ul> <li>Summary: A Level Editor for Sonic Heroes and Shadow the Hedgehog.  </li> <li>Collaboration between Igor Seabra, dreamsyntax and myself.  </li> <li>Cleaned up some code, implemented camera system.  </li> <li>Helped with a lot of file format reverse engineering on Sonic Heroes side.  </li> <li>Features Culling, Collision, Object Layout, Camera, Spawn Position, Spline, Particle and Texture Animation editors.  </li> </ul> <p></p>"},{"location":"games/sonic-heroes/#collision-file-generator","title":"Collision File Generator","text":"<p>Collision File Generator</p> <ul> <li>Summary: Generates Collision files for Custom Stages.  </li> <li>Release Date: 2017 [Source Code].  </li> <li>Converts Wavefront <code>.obj</code> files into collision <code>.cl</code> files.  </li> <li>Fastest collision generator, performs conversion including Quadtree generation in under a second on a 4790k.  </li> </ul>"},{"location":"games/sonic-heroes/#all-in-one-mod-heroes-tweakbox","title":"All-In-One Mod: Heroes Tweakbox","text":"<p>Heroes Tweakbox</p> <ul> <li>Summary: All in one mod. Celebration of 2017's community achievements. </li> <li>Release Date: 2017 [Source Code].  </li> <li>Collaboration with Igor Seabra, YouTube Release Trailer.  </li> <li>Features:  <ul> <li>World's first custom level.  </li> <li>World's first hub world hack (using custom collision detection code).  </li> <li>Experimental .NET Framework based Mod Loader.  </li> <li>Advanced widescreen hack, FOV Slider.  </li> <li>Custom In-Game Debug Tools.  </li> <li>and more... all in 30000+ lines of code.  </li> </ul> </li> <li>Status: Deprecated in favour of Reloaded, features re-released as separate modular mods.  </li> </ul> <p></p>"},{"location":"games/sonic-riders/","title":"Sonic Riders","text":"<p>About</p> <ul> <li>Platform: PC  </li> <li>Release Date: 2006  </li> </ul>"},{"location":"games/sonic-riders/#all-in-one-mod-riders-tweakbox","title":"All in One Mod: Riders Tweakbox","text":"<p>Riders Tweakbox</p> <ul> <li>Summary: An all in one mod that does literally just about everything AND MORE.  </li> <li>Status: Active Development (Slow)  </li> <li>Features:<ul> <li>Too many to list here. See wiki. Highlights below.  </li> <li>Online Multiplayer: Fully featured with server browser, spectator, no port forward needed etc.  </li> <li>Widescreen Support.  </li> <li>Fixed Frame Pacing.  </li> <li>Discord Rich Presence Support.  </li> <li>Boot to Menu/Race.  </li> <li>Inject Custom Music.  </li> <li>Custom Texture Injection/Replacement incl. Animated Textures.  </li> <li>Massively Improved Load &amp; Startup Times.  </li> <li>Massively Improved Performance (&gt;5x !!).  </li> <li>Lots of debug tools &amp; file format editors.  </li> <li>and many more... </li> </ul> </li> </ul> <p>Online Multiplayer: </p> <p>Gear Editors: </p>"},{"location":"games/sonic-riders/#riders-hacking-tools-wiki","title":"Riders Hacking Tools (&amp; Wiki)","text":"<p>Riders Hacking Wiki</p> <ul> <li>Summary: A wiki for all knowledge and tools, by yours truly.  </li> <li>Release Date: 2021 Website </li> <li>Features:  <ul> <li>All game modding tools are hosted on this wiki.  </li> <li>All modding knowledge is hosted on this wiki.  </li> <li>Contains listing of all game files and their corresponding file formats.  </li> <li>Contains listing of all game archives and files inside with corresponding names and formats.  </li> <li>Contains listing of all tools.  </li> </ul> </li> </ul> <p>Below are information on various tools present in the wiki/repo.  </p> <p>IndexTool</p> <ul> <li>Summary: Tool that recognises any known file format in the game and generates documentation for wiki.  </li> <li>Tells you which tools to use for this file format.  </li> <li>Very useful considering game has no file names inside archives.  </li> </ul> <p>RidersArchiveTool</p> <ul> <li>Summary: Extracts files from the game's archive format.  </li> <li>Features fastest compressor/decompressor by yours truly.  </li> <li>Used by just about every Sonic Riders mod.  </li> </ul> <p>RidersTextureArchiveTool</p> <ul> <li>Summary: Extracts textures from texture archives.  </li> <li>Used in mods like SRDX and SRTE to add new character textures.  </li> </ul> <p>MenuLayoutToJson</p> <ul> <li>Summary: Converts menu animations and item placement to human readable JSON, and back.  </li> <li>Used in mods like SRDX and SRTE to add new characters to menu.  </li> </ul> <p>GcaxDatInjector</p> <ul> <li>Summary: Can be used to edit sound effects in .DAT files in the GameCube version of Riders.</li> </ul>"},{"location":"games/sonic-riders/#riders-sdk-disassembly","title":"Riders SDK &amp; Disassembly","text":"<p>Sewer56.SonicRiders</p> <ul> <li>Summary: Library containing low level code to mod the game as well as read/write the game's file formats.  </li> <li>Release Date: 2020 Source Code </li> <li>All Riders PC mods and tools use this library under the hood.  </li> </ul> <pre><code>_blockInputsHook = Functions.GetInputs.Hook(BlockGameInputsIfEnabled).Activate();\n\nprivate int BlockGameInputsIfEnabled()\n{\n    // Skips game controller input obtain function if condition is true.\n    if (!_isEnabled)\n        return _blockInputsHook.OriginalFunction();\n\n    return 0;\n}\n</code></pre> <p>High level API like this, allows for easy access of various game internals.  </p>"},{"location":"games/sonic-riders/#modern-controller-support","title":"Modern Controller Support","text":"<p>Riders Controller Hook</p> <ul> <li>Summary: Adds support for modern Game Controllers to Sonic Riders.  </li> <li>Release Date: 2020 Source </li> <li>Adds support for remapping controllers.  </li> <li>Adds support for controller hotplugging.  </li> <li>Adds support for XInput (360) based controllers.  </li> <li>Allows for deadzone adjustment, inverting axis etc.  </li> <li>Restores ability to drift using triggers missing from PC version.  </li> <li>Restores ability to control 3P/4P [missing from PC port].  </li> <li>Provides an API for mods to inject their own inputs.  </li> <li>and much more...</li> </ul> <p></p>"},{"location":"games/sonic-riders/#discord-rich-presence","title":"Discord Rich Presence","text":"<p>Rich Presence</p> <ul> <li>Summary: Presents your current play status on Discord.  </li> <li>Release Date: 2020 Source </li> <li>Status: Deprecated. Superseded by Tweakbox.  </li> <li>Features:  <ul> <li>Show your current activity on Discord.  </li> <li>Supports multiplayer modes, including score tracking.  </li> <li>Time elapsed syncs to stage timer.  </li> </ul> </li> </ul> <p></p>"},{"location":"games/sonic-riders/#trick-text-translator","title":"Trick Text Translator","text":"<p>Trick Text Translator</p> <ul> <li>Summary: Creates custom trick names by translating coordinates of trick font sprites to ASCII and back.   </li> <li>Release Date: Tool unreleased, source release only.  </li> <li>Source Code: [Available in Riders SDK].  </li> </ul> <p></p>"},{"location":"games/sonic-riders/#prototype-0931-restoration","title":"Prototype 0.931 Restoration","text":"<p>Prototype 0.931 Restoration</p> <ul> <li>Summary: Made debug executable of beta version work with files from retail game.  </li> <li>Release Date: 2020 [Release Thread, Learn More Here].  </li> <li>Creating this was a complicated process involving reverse engineering multiple archive formats and hacking around crashes in game code.  </li> <li>Features:  <ul> <li>Partial Symbols (Function, Variable Names).  </li> <li>Re-enabled a lot of debug functionality disabled in this build.  </li> <li>A lot of unique bugs, glitches and other minor code features.  </li> </ul> </li> </ul> <p></p> <p>Riders PS2 Tools</p> <ul> <li>Summary: Tools that were used to create the prototype restoration.  </li> <li>Release Date: 2020 [Source Code].  </li> <li>A lot of code from this repo was moved to Riders SDK.  </li> </ul>"},{"location":"games/sonic-riders/#startup-restriction-killer","title":"Startup Restriction Killer","text":"<p>Startup Restriction Killer</p> <ul> <li>Summary: Allows you to launch game from outside launcher, and multiple instances too.  </li> <li>Release Date: 2019 [Source Code].  </li> <li>Status: Deprecated. Superseded by Tweakbox.  </li> </ul> <p></p>"},{"location":"games/tokyo-xanadu/","title":"Tokyo Xanadu eX+","text":"<p>About</p> <ul> <li>PC Game, 2017.  </li> <li>Reverse Engineered .BRA archive format and wrote unpacker (Source), Release Thread.  <ul> <li>Wrote this program on game's release day.  </li> <li>With this you can extract data for porting to other games.  </li> </ul> </li> </ul> <p></p> <p>Trying to import unmodified Xanadu Models into Trails of Cold Steel II without re-export provides funny results.  </p>"},{"location":"games/trails-in-the-sky/","title":"Trails in The Sky","text":"<p>About</p> <ul> <li>PC Game, 2014.  </li> <li>Reverse Engineered &amp; Wrote Converter for Textures and Sprite Animations (Source).  </li> <li>This applies to all games in series (i.e. SC [2016] and 3rd [2017] too).  </li> </ul> <p></p> <p>Converter can both extract and produce new sprites that are 1:1 with the original game.  </p>"}]}